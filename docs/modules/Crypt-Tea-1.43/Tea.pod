=head1 名前

Tea.pm - PerlとJavaScriptでのTiny Encryption Algorithm

=head1 概要

使用方法:

    use Crypt::Tea;
    $key = 'PUFgob$*LKDF D)(F IDD&P?/';
    $ascii_ciphertext = &encrypt ($plaintext, $key);
    ...
    $plaintext_again = &decrypt ($ascii_ciphertext, $key);
    ...
    $signature = &asciidigest ($text);

CGIスクリプト:

    use Crypt::Tea;
    print &tea_in_javascript;  # こうすればブラウザは暗号化と
    # 復号化ができます ! 例についてはCGI::Htauth.pmをご覧ください ...

=head1 説明

このモジュールはTEA、Tiny Encryption Algorithmそして
PerlとJavaScriptでの、いくつかの利用モードを実装しています。

$keyは十分に長めの文字列です;1回の暗号にでたらめな8ビットの
少なくとも17バイト。

バージョン1.34からは、さまざまなHtauth特有のフック・ルーチンは
I<CGI::Htauth.pm>モジュールに移っています。

バージョン 1.43,
#コメント#

(c) Peter J Billam 1998

=head1 サブルーチン

=over 3

=item I<encrypt>( $plaintext, $key );

CBC (Cipher Block Chaining)で暗号化します。

=item I<decrypt>( $ciphertext, $key );

CBC (Cipher Block Chaining)で復号化します。

=item I<binary2ascii>( $a_binary_string );

バイナリの引数のASCIIテキスト・エンコーディングを提供します。
もしTea.pmがCGIスクリプトから呼び出されたのでなければ、
ascii文字列は72文字の行に分割されます。

=item I<ascii2binary>( $an_ascii_string );

=item I<asciidigest>( $a_string );

引数のアスキー化されたバイナリ署名を返します。

=item I<tea_in_javascript>();

ブラウザと通信するCGIスクリプトで使うため、
JavaScriptでの互換性のあるTEA実装を返します。

=back

=head1 作者(=AUTHOR)

Peter J Billam <peter@pjb.com.au>,
MakeMakerパッケージ作成についてNeil Watkissに感謝します。

=head1 クレジット(=CREDITS)

Based on TEA, as described in
http://www.cl.cam.ac.uk/ftp/papers/djw-rmn/djw-rmn-tea.html ,
and on some help from I<Applied Cryptography> by Bruce Schneier
as regards the modes of use.

=head1 参考資料

http://www.pjb.com.au/, CGI::Htauth.pm, perl(1).

=head1 翻訳者

川合孝典 (GCD00051@nifty.ne.jp)

