=head1 名前

XML::RSS::Aggregate - RSSの収集を行うもの

=head1 概要

    my $rss = XML::RSS::Aggregate->new(
        # XML::RSS->channel()のためのパラメータ
        title   => 'Aggregated Examples',
        link    => 'http://blog.elixus.org/',

        # XML::RSS::Aggregate->aggregate()のためのパラメータ
        sources => [ qw(
            http://one.example.com/index.rdf
            http://another.example.com/index.rdf
            http://etc.example.com/index.rdf
        ) ],
        sort_by => sub {
            $_[0]->{dc}{subject}    # dc:dateでソートすることをデフォルトにする
        },
        uniq_by => sub {
            $_[0]->{title}          # linkによってユニークであることをデフォルトにする
        }
    );

    $rss->aggregate( sources => [ ... ] );  # more items
    $rss->save("all.rdf");

=head1 説明

このモジュールはB<XML::RSS>のサブクラスを実装し、C<aggregate>メソッドを
追加します。これは他のRSS配信を取り出し、オブジェクトそのものに追加します。
これは収集されたリンクに対する適切な順序付けと重複の削除を処理します。

またはコンストラクタC<new>は、暗黙のうちにC<channel>とC<aggregate>
メソッドに渡される引数を取るように変更されます。

全ての基本メソッドは、このモジュールでも適用できます;詳細はL<XML::RSS>を
ご覧ください。

=head1 METHODS

=over 4

=item aggregate (sources=>\@url, sort_by=>\&func, uniq_by=>\&func)

このメソッドはC<@url>で挙げられた全てのRSS配信を取り出し、それらの
要素を、そのオブジェクトのC<add_item>に渡します。

オプションのC<sort_by>引数はRSS要素を並べ替えるために使う関数を指定
します;デフォルトではC<{link}>属性によって同じ値を分けるようにして、
(絶対時間のスタンプに変換された)C<{dc}{date}>属性によって
ソートされます。

オプションのC<uniq_by>引数は重複しているRSS要素を削除するために使う
関数をしています;デフォルトでは同じC<{link}>値を持っている要素を
削除します。

=back

=head1 参考資料

L<XML::RSS>

=head1 作者

Autrijus Tang E<lt>autrijus@autrijus.org E<gt>

=head1 著作権(=COPYRIGHT)

Copyright 2002 by Autrijus Tang E<lt>autrijus@autrijus.orgE<gt>.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.

See L<http://www.perl.com/perl/misc/Artistic.html>

=head1 翻訳者

川合孝典 (GCD00051@nifty.ne.jp)
