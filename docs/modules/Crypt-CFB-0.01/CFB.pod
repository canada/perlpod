=head1 名前

Crypt::CFB - Cipher Feedback Modeでデータを暗号化します

=head1 概要

    use Crypt::CFB;

    my $cipher = new Crypt::CFB $key, 'Crypt::Rijndael';

    my $ciphertext = $cipher->encrypt($plaintext);
    my $plaintext = $cipher->decrypt($ciphertext);

    my $cipher2 = new Crypt::CFB $key, 'Digest::MD5';

    $ciphertext = $cipher->encrypt($plaintext);
    $plaintext = $cipher->decrypt($ciphertext);

=head1 説明

pure Perlな汎用的なCFB実装。
Cipher Feedback Modeモジュールはブロック暗号や暗号化ハッシュ
関数からストリーム暗号を組み立て、オブジェクトとして返します。
それがC<blocksize>とC<keysize>メソッドをサポートするのであれば、
C<Crypt::>クラスにある全てのブロック暗号を使うことが出来ます。
それがC<add>メソッドをサポートするのであれば、
C<Digest::>クラスにある全てのハッシュ関数を使うことが出来ます。

=head1 メソッド

=over 4

=item C<$cipher = new Crypt::CFB $key, $algorithm>

CFBオブジェクトを組み立てます。C<$algorithm>がブロック暗号であれば、
C<$key>はその暗号に対しての正しい大きさでなければなりません。
ほとんどの場合、C<keysize>メソッドを呼び出すことにより、ブロック暗号
モジュールに尋ねることができます。C<$algorithm>がハッシュ関数(C<Digest::>)で
あれば、C<$key>はどのような大きさにもすることができます。

=item C<$ciphertext = $cipher-E<gt>encrypt $plaintext>

C<$plaintext>を暗号化します。入力はCFBオブジェクトの初期状態から生成される
キーストリームでXORされ、その状態は出力で更新されます。C<$plaintext>は
どのような大きさにもすることが出来ます。

=item C<$cipher-E<gt>reset>

初期状態をリセットします。同じオブジェクトを使うのであれば、
復号化する前に、これを行うことを忘れないでください。

=item C<$plaintext = $cipher-E<gt>decrypt $ciphertext>

C<$ciphertext>を復号化します。

=back

=head1 バグ

これは恐ろしいほど遅いです。C<Digest::>のいくつかのクラスは
C<add>メソッドを提供しないので、それらは失敗します。実装は
ちょっとだけ凝っています。

=head1 作者

Matthias Bauer <matthiasb@acm.org>

=head1 翻訳者

川合孝典 (GCD00051@nifty.ne.jp)
