=head1 名前

  Net::Server::Proto::SSL - adp0 - Net::Server SSL protocol.

  Net::Server::Proto::SSL - adp0 - Net::Server SSLプロトコル

=head1 概要

See L<Net::Server::Proto>.

L<Net::Server::Proto>を参照。

=head1 説明

Experimental.  If anybody has any successes or ideas for
improvment under SSL, please email <perl.ssl@seamons.com>.
This is extremely alpha.

実験的なモジュール。もしもうまくいったとか、
改良する方策をご存知なら、メールを<perl.ssl@seamons.com>
送ってください。これは本当にアルファ版だから。

Protocol module for Net::Server.  This module implements a
secure socket layer over tcp (also known as SSL).
See L<Net::Server::Proto>.

Net::Server用プロトコルモジュール。このモジュールは
tcp上に secure socket layer（SSLとして知られている）を
実装する。 L<Net::Server::Proto>を参照。

There is a limit inherent from using IO::Socket::SSL,
namely that only one SSL connection can be maintained by
Net::Server.  However, Net::Server should also be able to
maintain any number of TCP, UDP, or UNIX connections in
addition to the one SSL connection.

IO::Socket::SSLを制約付きで継承している。すなわち、Net::Serverは
ただ一つのSSLコネクションを維持することができる。しかしまた
Net::Serverは、一つのSSLコネクションに加えていくつでも
TCP、UDP、UNIXコネクションを維持することができるはずである。

Additionally, getline support is very limited and writing
directly to STDOUT will not work.  This is entirely dependent
upon the implementation of IO::Socket::SSL.  getline may work
but the client is not copied to STDOUT under SSL.  It is suggested
that clients sysread and syswrite to the client handle
(located in $self->{server}->{client} or passed to the process_request
subroutine as the first argument).

加えて、getlineのサポートは極めて限定的であり、STDOUTへの直接的な
書き込みは動作しない。これは完全にIO::Socket::SSLの実装に依存している。
getlineは働くかもしれないが、SSLの下でクライアントはSTDOUTに対し
コピーされない。クライアントハンドル（$self->{server}->{client}に
ある。あるいはprocess_requestサブルーチンの第一引数として渡される）
に対してsysreadとsyswriteを使うことを提案したい。

=head1 パラメータ

In addition to the normal Net::Server parameters, any of the
SSL parameters from IO::Socket::SSL may also be specified.
See L<IO::Socket::SSL> for information on setting this up.

通常のNet::Serverのパラメータに加えて、IO::Socket::SSLの
SSLパラメータを指定することができる。セットアップのための
より詳細な情報はL<IO::Socket::SSL>を参照のこと。

=head1 LICENCE

Distributed under the same terms as Net::Server

=head1 謝辞

Thanks to Vadim for pointing out the IO::Socket::SSL accept
was returning objects blessed into the wrong class.

Vadimは、IO::Socket::SSLのacceptが誤ったクラスにblessされた
オブジェクトを返すことを指摘してくれた。
